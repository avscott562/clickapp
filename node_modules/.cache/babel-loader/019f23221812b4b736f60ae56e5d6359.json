{"ast":null,"code":"var _jsxFileName = \"/Users/aliciavscott/UCR/assignments/clickapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport images from './images.json';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentScore: 0,\n      topScore: 0,\n      images: [],\n      headerMessage: \"\"\n    };\n\n    this.handleIncrement = () => {\n      let count = this.state.currentScore + 1;\n      this.setState({\n        currentScore: count\n      });\n\n      if (count >= this.state.topScore) {\n        this.setState({\n          topScore: count\n        });\n      }\n\n      console.log(`current score is ${this.state.currentScore + 1}.  High score is ${this.state.topScore + 1}.`);\n      return this.state.topScore + 1;\n    };\n\n    this.reset = () => {\n      let count = 0;\n      this.setState({\n        currentScore: count,\n        headerMessage: \"Click an image to begin!\"\n      });\n      this.setState({\n        images: this.state.images.map(image => {\n          image.isClicked = false;\n        })\n      });\n    };\n\n    this.shuffleImages = arr => {\n      let randomIndex;\n      let temp;\n\n      for (let i = 0; i < arr.length; i++) {\n        temp = arr[i];\n        randomIndex = Math.floor(Math.random() * (i + 1));\n        arr[i] = arr[randomIndex];\n        arr[randomIndex] = temp;\n      }\n\n      console.log(arr);\n      return arr;\n    };\n\n    this.imageClicked = id => {\n      this.setState({\n        images: this.state.images.map(image => {\n          if (image.id === id) {\n            if (!image.isClicked) {\n              console.log(`${image.alt} has been click ${image.isClicked}`);\n              image.isClicked = true;\n              this.handleIncrement();\n            } else {\n              console.log(`${image.alt} has been clicked already!`);\n              this.reset();\n            }\n          }\n\n          return image;\n        })\n      });\n      return this.setState({\n        images: this.shuffleImages(images)\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      images: this.shuffleImages(images),\n      headerMessage: \"Click an image to begin!\"\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      current: this.state.currentScore,\n      high: this.state.topScore,\n      message: this.state.headerMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Main, {\n      images: this.state.images,\n      imageClicked: this.imageClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aliciavscott/UCR/assignments/clickapp/src/App.js"],"names":["React","Component","Navbar","Header","Main","Footer","images","App","state","currentScore","topScore","headerMessage","handleIncrement","count","setState","console","log","reset","map","image","isClicked","shuffleImages","arr","randomIndex","temp","i","length","Math","floor","random","imageClicked","id","alt","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport images from './images.json';\nimport './App.css';\n\n\n\nclass App extends Component {\n\n  state = {\n    currentScore: 0,\n    topScore: 0,\n    images: [],\n    headerMessage: \"\"\n  }\n\n  componentDidMount() {\n    this.setState({ images: this.shuffleImages(images), headerMessage: \"Click an image to begin!\" });\n  }\n\n  handleIncrement = () => {\n    let count = this.state.currentScore + 1;\n    this.setState({ currentScore: count });\n    if (count >= this.state.topScore) {\n      this.setState({ topScore: count });\n    }\n    console.log(`current score is ${this.state.currentScore+1}.  High score is ${this.state.topScore+1}.`);\n    return this.state.topScore+1\n  }\n\n  reset = () => {\n    let count = 0;\n    this.setState({ currentScore: count, headerMessage: \"Click an image to begin!\" });\n    this.setState({ images: this.state.images.map(image => {\n      image.isClicked = false;\n    }) });\n  }\n\n  shuffleImages = (arr) => {\n    let randomIndex;\n    let temp;\n    for (let i=0; i<arr.length; i++) {\n      temp = arr[i];\n      randomIndex = Math.floor(Math.random() * (i+1));\n      arr[i] = arr[randomIndex];\n      arr[randomIndex] = temp;\n    }\n    console.log(arr);\n    return arr;\n  }\n\n  imageClicked = (id) => {\n    this.setState({ images: this.state.images.map(image => {\n      if(image.id === id) {\n        if(!image.isClicked) {\n          console.log(`${image.alt} has been click ${image.isClicked}`);\n          image.isClicked = true;\n          this.handleIncrement();\n        } else {\n          console.log(`${image.alt} has been clicked already!`);\n          this.reset();\n        }\n      }\n      return image;\n    }) });\n    return this.setState({ images: this.shuffleImages(images) });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar current={this.state.currentScore} high={this.state.topScore} message={this.state.headerMessage} />\n        <Header />\n        <Main \n          images={this.state.images}\n          imageClicked={this.imageClicked} \n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}